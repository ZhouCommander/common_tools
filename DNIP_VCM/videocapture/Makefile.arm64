VERSION = 2.4
RELEASE_DIR = ../cameramonitor/release
INSTALL_PATH = /opt/deepnorth/cameracapture/videocapture
TEMP_DIR = ${RELEASE_DIR}/${INSTALL_PATH}
TARGET = videocapture
CXX = g++
CXXFLAGS = -std=c++11 -ggdb3 -Wall -O2
OEXT = o

INCLUDES = -I/nfs/BaseGroup/3rdparty/rabbitmq-c-0.9.0/include -I/nfs/BaseGroup/3rdparty/boost_1_67_0/install_dir_linux_arm64/include -I/nfs/BaseGroup/3rdparty/ubuntu1604_arm64/include
DEP_LIBS = -lpthread  -lACE   -ljsoncpp /nfs/BaseGroup/3rdparty/rabbitmq-c-0.9.0/lib/arm64-linux-gnu/librabbitmq.a /nfs/BaseGroup/3rdparty/boost_1_67_0/install_dir_linux_arm64/lib/libboost_system.a /nfs/BaseGroup/3rdparty/boost_1_67_0/install_dir_linux_arm64/lib/libboost_filesystem.a  -Wl,-Bstatic -llog4cpp -Wl,-Bdynamic 

all : format $(TARGET) package

## source and object files
SRCS = \
	main.cpp \
    capture_template.cpp \
    capture_ffmpeg.cpp \
    capture_vlc.cpp \
    capture_sendmq.cpp \
    capture_common.cpp

OBJS = $(SRCS:.cpp=.$(OEXT))

# =============
# File suffixes
# =============
.SUFFIXES: .cpp .$(OEXT)

# ====================
#compile all cpp files
# ===================
%.${OEXT}: %.cpp
	${CXX} ${CXXFLAGS} ${INCLUDES} -c $<;

# Executable binary
$(TARGET): $(OBJS)
	$(CXX) ${CXXFLAGS} -o $@ $^ $(DEP_LIBS)

format:
	dos2unix *.cpp *.h

.PHONY: clean

package:
	if [ ! -d "${TEMP_DIR}" ]; then \
		mkdir -p ${TEMP_DIR}; \
	fi
	cp -rf ./script/*.sh  ${TEMP_DIR}
	chmod +x ${TEMP_DIR}/*.sh
	dos2unix  ${TEMP_DIR}/*.sh
	if [ ! -d "${TEMP_DIR}/etc/ffmpeg" ]; then \
		mkdir -p ${TEMP_DIR}/etc/ffmpeg; \
	fi
	
	if [ ! -d "${TEMP_DIR}/lib64" ]; then \
		mkdir -p ${TEMP_DIR}/lib64; \
	fi
	cp -rf /nfs/BaseGroup/3rdparty/ffmpeg/ffmpeg-3.4.2-arm64-64bit-static/*  ${TEMP_DIR}/etc/ffmpeg
	cp -rf ./videocapture ${TEMP_DIR}
	cp -d /nfs/BaseGroup/3rdparty/ubuntu1604_arm64/lib/libACE*  ${TEMP_DIR}/lib64
	cp -d /nfs/BaseGroup/3rdparty/ubuntu1604_arm64/lib/libjsoncpp.* ${TEMP_DIR}/lib64
rpm:
	fpm -s dir -t rpm -v ${VERSION} -n video-capture --post-install ${TEMP_DIR}/post_install.sh --after-remove ${TEMP_DIR}/uninstall_ubuntu.sh -C ./${RELEASE_DIR}
	rm -rf "${TEMP_DIR}"
deb:
	fpm -s dir -t deb -v ${VERSION} -n video-capture --post-install ${TEMP_DIR}/post_install.sh --after-remove ${TEMP_DIR}/uninstall_ubuntu.sh -C ./${RELEASE_DIR}
	rm -rf "${TEMP_DIR}"
clean:
	rm -f *.$(OEXT) $(TARGET) *.deb *.rpm
